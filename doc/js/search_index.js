var search_data = {"index":{"searchIndex":["basestorage","binarysearchtree","binarysearchtreehash","btreestorage","hashstorage","object","queryparser","queryresponse","testyacd","yakvdconfig","yakvdconstants","_test_template()","default()","delimiter()","get_by_key()","get_by_key()","get_by_key()","get_default()","get_range()","get_range()","get_range()","get_range()","get_time()","init!()","key_not_found()","new()","new()","new()","new()","new()","parse()","run()","set_value()","set_value()","set_value()","store()","store()","store()","success()","test_get_default()","test_get_range()","test_get_time()","test_get_value()","test_set_value()","underscore()","yakvd_config()","storage.csv","queries.sh"],"longSearchIndex":["basestorage","binarysearchtree","binarysearchtreehash","btreestorage","hashstorage","object","queryparser","queryresponse","testyacd","yakvdconfig","yakvdconstants","testyacd#_test_template()","yakvdconstants::default()","yakvdconstants::delimiter()","btreestorage#get_by_key()","hashstorage#get_by_key()","queryresponse#get_by_key()","queryresponse#get_default()","binarysearchtree#get_range()","binarysearchtreehash#get_range()","btreestorage#get_range()","queryresponse#get_range()","queryresponse#get_time()","basestorage#init!()","yakvdconstants::key_not_found()","basestorage::new()","btreestorage::new()","hashstorage::new()","queryparser::new()","queryresponse::new()","queryparser#parse()","object#run()","btreestorage#set_value()","hashstorage#set_value()","queryresponse#set_value()","basestorage#store()","btreestorage#store()","hashstorage#store()","yakvdconstants::success()","testyacd#test_get_default()","testyacd#test_get_range()","testyacd#test_get_time()","testyacd#test_get_value()","testyacd#test_set_value()","object#underscore()","yakvdconfig::yakvd_config()","",""],"info":[["BaseStorage","","BaseStorage.html","","<p>Base class for storages of Key-Value database\n"],["BinarySearchTree","","BinarySearchTree.html","",""],["BinarySearchTreeHash","","BinarySearchTreeHash.html","",""],["BtreeStorage","","BtreeStorage.html","",""],["HashStorage","","HashStorage.html","",""],["Object","","Object.html","",""],["QueryParser","","QueryParser.html","","<p>Basic query parser for Key-Value database\n"],["QueryResponse","","QueryResponse.html","","<p>Response class. Implements basic operations with database\n"],["TestYacd","","TestYacd.html","",""],["YakvdConfig","","YakvdConfig.html","","<p>Config for Key-Value Database\n"],["YakvdConstants","","YakvdConstants.html","",""],["_test_template","TestYacd","TestYacd.html#method-i-_test_template","( query_hash, allowed_response, error_text, inverse = false )",""],["default","YakvdConstants","YakvdConstants.html#method-c-default","()",""],["delimiter","YakvdConstants","YakvdConstants.html#method-c-delimiter","()",""],["get_by_key","BtreeStorage","BtreeStorage.html#method-i-get_by_key","(key)","<p>Get value by key Params:\n<p>key\n\n<p>Returns: value or `YakvdConstants.key_not_found`\n"],["get_by_key","HashStorage","HashStorage.html#method-i-get_by_key","(key)","<p>Get value by key Params:\n<p>key\n\n<p>Returns: value or `YakvdConstants.key_not_found`\n"],["get_by_key","QueryResponse","QueryResponse.html#method-i-get_by_key","(params)","<p>Get value by key if there is no key, returns default\n"],["get_default","QueryResponse","QueryResponse.html#method-i-get_default","()","<p>Returns default response\n"],["get_range","BinarySearchTree","BinarySearchTree.html#method-i-get_range","(key1, key2, node)","<p>Get array of keys between `key1` and `key2` starting from `node`\n"],["get_range","BinarySearchTreeHash","BinarySearchTreeHash.html#method-i-get_range","(key1, key2)","<p>Get array of keys between `key1` and `key2`\n"],["get_range","BtreeStorage","BtreeStorage.html#method-i-get_range","(key1, key2)",""],["get_range","QueryResponse","QueryResponse.html#method-i-get_range","(params)","<p>Returns json with pairs Key-Value for keys in range Implemented in\nBtreeStorage\n"],["get_time","QueryResponse","QueryResponse.html#method-i-get_time","(params)","<p>Returns Server Time\n"],["init!","BaseStorage","BaseStorage.html#method-i-init-21","(config)","<p>Opens storage file on disk and reads data to RAM\n"],["key_not_found","YakvdConstants","YakvdConstants.html#method-c-key_not_found","()",""],["new","BaseStorage","BaseStorage.html#method-c-new","(config)",""],["new","BtreeStorage","BtreeStorage.html#method-c-new","(config)","<p>Using binary search tree to store values in RAM\n"],["new","HashStorage","HashStorage.html#method-c-new","(config)","<p>Using ruby hash to store values in RAM\n"],["new","QueryParser","QueryParser.html#method-c-new","(response_obj)",""],["new","QueryResponse","QueryResponse.html#method-c-new","(storage)",""],["parse","QueryParser","QueryParser.html#method-i-parse","(query)","<p>Read commands from `query` and invokes it on QueryResponse&#39;s instance\n"],["run","Object","Object.html#method-i-run","()","<p>Starting server and waiting for requests\n"],["set_value","BtreeStorage","BtreeStorage.html#method-i-set_value","(key, value)","<p>Set value, associated with a key Params:\n<p>key\n<p>value\n"],["set_value","HashStorage","HashStorage.html#method-i-set_value","(key, value)","<p>Set value, associated with a key Params:\n<p>key\n<p>value\n"],["set_value","QueryResponse","QueryResponse.html#method-i-set_value","(params)","<p>Set value by key if there is no key, returns default\n"],["store","BaseStorage","BaseStorage.html#method-i-store","(line)","<p>Store 1 line on RAM. Empty implementation Params:\n<p>line\n\n"],["store","BtreeStorage","BtreeStorage.html#method-i-store","(line)","<p>Get line from file on disk and store it to RAM\n"],["store","HashStorage","HashStorage.html#method-i-store","(line)","<p>Get line from file on disk and store it to RAM\n"],["success","YakvdConstants","YakvdConstants.html#method-c-success","()",""],["test_get_default","TestYacd","TestYacd.html#method-i-test_get_default","()",""],["test_get_range","TestYacd","TestYacd.html#method-i-test_get_range","()",""],["test_get_time","TestYacd","TestYacd.html#method-i-test_get_time","()",""],["test_get_value","TestYacd","TestYacd.html#method-i-test_get_value","()",""],["test_set_value","TestYacd","TestYacd.html#method-i-test_set_value","()",""],["underscore","Object","Object.html#method-i-underscore","(camel_cased_word)","<p>Takes ClassName in camel-case and creates snake-case representation\n"],["yakvd_config","YakvdConfig","YakvdConfig.html#method-c-yakvd_config","()",""],["storage.csv","","data/storage_csv.html","","<p>programmer-3    Another Programmer programmer-4    Python Programmer\nprogrammer-5    Ruby Programmer …\n"],["queries.sh","","tests/queries_sh.html","","<p>curl -d\n“{&quot;query&quot;:{”command“:”get_by_key“,”key“:”programmer-1“}}\\r\\n” …\n"]]}}